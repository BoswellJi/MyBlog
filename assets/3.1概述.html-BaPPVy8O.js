import{_ as i,c as a,b as l,o as c}from"./app-B56A7WC8.js";const o={};function d(m,e){return c(),a("div",null,e[0]||(e[0]=[l('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><ul><li><p>对 <code>计算过程</code> 的认识的不同产生的 <code>计算模型</code> ;</p></li><li><p>基于计算模型的分类： 命令式，函数式，逻辑式，面向对象；</p></li><li><p>基于程序的本质的分类： 命令式，说明式；</p></li><li><p>计算机显著的特性是内存，其中各个单元可以单独更新，它与程序设计语言中的变量正好对应；</p></li></ul><h2 id="命令式语言与结构化编程" tabindex="-1"><a class="header-anchor" href="#命令式语言与结构化编程"><span>命令式语言与结构化编程</span></a></h2><ul><li><p>命令式语言演化分为： 结构化编程，面向对象编程，两个阶段；</p></li><li><p>无论从 <code>语言定义</code> 还是 <code>数据抽象</code> 的发展，面向对象都是结构化编程的自然延申；</p></li><li><p>计算机：存储，处理 =》 编程语言：内存，运算；</p></li><li><p>前者讲的式运算范型， <code>实质是面向存储的编程</code> ，后者讲的是一种程序设计与开发的方法；唯一相同的就是 <code>数据结构</code> ，即命令式语言关注的 <code>存储</code> ；</p></li><li><p><code>计算机体系中</code> 数据结构上的简单抽象：</p><ul><li>基本数据单元 —— 16/32/64位系统 —— 字节，位，字，双字 —— bit, byte, word, dword</li><li>连续数据块 —— 连续存储块 —— 数组，字符串，结构体 —— array, string, struct</li><li>有关系的数据片段 —— 存储地址 —— 指针，结构，引用 —— pointer, tree</li></ul></li><li><p>所有算法的原始基础，是对 <code>数据表现形式</code> 的设定；</p></li><li><p>结构化程序设计</p><ul><li><p>包含的内容：</p><ul><li><p>控制结构</p><ul><li>顺序，分支，循环</li></ul></li><li><p>组织结构</p><ul><li>表达式，语句行，语句块，过程，单元，包</li></ul></li><li><p>数据结构</p><ul><li>基本数据结构，复合数据结构</li></ul></li></ul></li><li><p>根据数据的处理过程，自顶向下的分解系统模块，这一分析，设计的过程，被称为结构化，它的产物是 <code>模块</code> ， <code>过程</code> ；</p></li><li><p>数据结构（包括结构体), 来自于上述分析，设计阶段的 <code>数据建模</code> ；</p></li></ul></li></ul><h2 id="结构化的疑难" tabindex="-1"><a class="header-anchor" href="#结构化的疑难"><span>结构化的疑难</span></a></h2><ul><li><p>命令式语言上的努力, 都必然面临的问题是： <code>如何抽象数据存储</code> ;</p></li><li><p>结构化编程时代, 解决这个问题的是 <code>结构体</code> ; 结构体的数据表达过度的弹性，会带来编程设计中的不规范；</p></li><li><p>结构体是面向机器世界的 <code>存储描述</code> , 因此他的抽象层级明显过低;</p></li><li><p>抽象层次低的问题:</p><ul><li>结构体与实体直接相关, 并且将这种相关性直接呈现在使用者的面前, 因此, 开发人员必须面对数据的具体含义与关系;</li><li>结构体的抽象更面向与数据存储形式的表达和算法实现的方式, 脱离了具体使用环境和算法的结构缺乏通用性;</li><li>僵化的类型与僵化的逻辑并存, 影响了业务逻辑的表达;</li></ul></li></ul><h2 id="面向对象语言是突破吗" tabindex="-1"><a class="header-anchor" href="#面向对象语言是突破吗"><span>面向对象语言是突破吗?</span></a></h2><ul><li><p>面向对象解决的主要问题：</p><ul><li>开发人员必须面临数据的具体含义与关系；</li><li>脱离了具体使用环境与算法的结构缺乏通用性；</li><li>类型与逻辑僵化从而影响了业务逻辑的表达；</li></ul></li><li><p>通过更加 <code>细化的可见性设定</code> , 实现更好的 <code>数据封装性</code> 以及 <code>数据域管理</code> ;</p><ul><li><p>明确含义的可见性, 避免不相干的子系统了解到更多的结构, 这就是封装;</p><ul><li><code>确定含义的可见性</code> ， <code>设计良好的类/对象层次</code> ，可以极大程度避免不相干的子系统了解到更多 <code>结构(面向对象系统中的&#39;对象&#39;)</code> 的细节；</li></ul></li><li><p>结构体的通用性问题使用继承来解决;</p></li><li><p>解决 <code>强类型</code> 与 <code>业务逻辑表达</code> 之间的冲突, 使用多态;</p><ul><li>类型系统检查中，一旦明确 <code>父类行为的抽象</code> ，子类如何设计，都不会影响父类的 <code>行为（业务逻辑</code></li></ul></li></ul></li><li><p>对像 <code>封装了更多局部逻辑</code> ，还潜在的描述了它如何对 <code>整个体系架构</code> 与 <code>业务逻辑</code> 进行支撑；</p></li><li><p>对象 <code>基类</code> 及其 <code>继承树</code> 是对 <code>数据抽像的表达</code> ；对象只是 <code>更高层次的数据抽象</code> ；</p></li><li><p>结构确定，则算法确定</p></li></ul><h2 id="更高层次的抽象-接口" tabindex="-1"><a class="header-anchor" href="#更高层次的抽象-接口"><span>更高层次的抽象: 接口</span></a></h2><ul><li><p>将对象系统理解为三个元素的复合体: 数据, 行为, 关系;</p></li><li><p>数据系统和业务系统耦合度过高, 是因为抽象程度过低;</p><ul><li>确定了 <code>运算目标（对象）</code> 的 <code>结构</code> 与 <code>行为</code> ，限制了它的 <code>抽象性</code> ；</li></ul></li><li><p>接口提出的观点：</p><ul><li>接口只暴露数据体的 <code>逻辑行为</code> 能力, 不暴露能力的 <code>实现方法</code> 和 <code>基于的数据特征</code> ;</li></ul></li><li><p>接口首次从 <code>系统或者模块</code> 中，剥离了 <code>数据</code> 的概念；</p></li><li><p>接口的高度抽象带来的价值:</p><ul><li>体系的可描述性;</li></ul></li><li></li></ul><h2 id="再论语言的分类" tabindex="-1"><a class="header-anchor" href="#再论语言的分类"><span>再论语言的分类</span></a></h2><ul><li><p>第一种语言分类:</p><ul><li>动态</li><li>静态</li><li>半动态</li></ul></li><li><p>计算机范型角度:</p><ul><li>命令</li><li>函数式</li><li>逻辑式</li><li>面向对象</li></ul></li><li><p>对象是更高的数据抽象, 对象仍然是基于 <code>连续存储</code> 的概念进行的结构设计;</p></li><li><p>命令式语言的实质是 <code>面向存储的编程</code> , 面向对象解决的是 <code>更高层次的抽象数据存储</code> ;</p></li><li><p>在 <code>命令式</code> 的， <code>面向对象编程</code> 的实践中，创建出来的 <code>面向接口编程/IOP</code> ；</p></li><li><p>js同时是说明式和命令式语言，体现为（函数式，命令式 <code>（面向对象和过程)</code> 特性；</p></li></ul><h2 id="js的语源-设计思想" tabindex="-1"><a class="header-anchor" href="#js的语源-设计思想"><span>js的语源(设计思想)</span></a></h2><ul><li><p>使用 <code>消息/事件: 观察者模式</code> 来控制web页面内容的思想，onkeyup，onkeydown；</p></li><li><p>关联数组，js中的对象；</p></li><li><p>原型继承系统；</p></li></ul>',14)]))}const h=i(o,[["render",d]]),p=JSON.parse('{"path":"/books/javascript/javascript%E8%AF%AD%E8%A8%80%E7%B2%BE%E9%AB%93%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AE%9E%E8%B7%B5/3.javascript%E7%9A%84%E9%9D%9E%E5%87%BD%E6%95%B0%E5%BC%8F%E8%AF%AD%E8%A8%80%E7%89%B9%E6%80%A7/3.1%E6%A6%82%E8%BF%B0.html","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1735558340000,"contributors":[{"name":"j哥哥","username":"","email":"aiyoudqrjmz@163.com","commits":1},{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":15,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":4,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"","email":"mingzhuang.ji@ly.com","commits":2}],"changelog":[{"hash":"dbc456edbfbe7a16e99ef11ad04098fbad26fdc4","time":1735558340000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"chore: 调整结构"},{"hash":"6cd6513af962d39a4becb6d4423104c209684122","time":1702001688000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: monorepo"},{"hash":"f2337734b6270ac051b908354dd6dccce75439f6","time":1660138466000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"chore: 梳理"},{"hash":"40490e61600ecc7dded37e1f242086aa74489f64","time":1653880183000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: lerna"},{"hash":"a91ae3f357e5517c1fe59bdcaee35dcb7f620199","time":1627635031000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"feat: books目录"},{"hash":"1dde0babb74363f0c17a499d62b693c8b4123c68","time":1617954954000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"博客：整理博客"},{"hash":"cf48db9cca43f70ff1fe8b559344e85cc1ac9f9c","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"d50f479780aaaab8ba65a89c9940f78b4170b0ba","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"ba58bc55ae23497b0b222467314c09eb9f4fd81c","time":1598270631000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"English"},{"hash":"e321fddedbf3108742b9906cd6e52d4d342863d3","time":1598270631000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"English"},{"hash":"e7bca14f7896e4704bed67a1b4199f3a06f5996c","time":1596885946000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"javascript"},{"hash":"432fa82e9c7ebfd0cffa354c5da30a8d766f0a07","time":1596803520000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"javascript"},{"hash":"2b92955aeab3fe6b704c2831d4422a7af6bf1dd9","time":1596718046000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"javascript"},{"hash":"60516dcb4a0c8a78143094184af1f3768e97169f","time":1596193780000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"js:正则"},{"hash":"c01bd2bcc502766f19653692fb01cfeb1eb4d946","time":1596113157000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"js: book"},{"hash":"42dc7bd3dee2b0ced6653d10971cfab481330b49","time":1596027142000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"js:动态特性"},{"hash":"397136bf7682bc990d13273134fa706dd7c2d2ff","time":1591408571000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"ts:类型系统"},{"hash":"9c87d62d0af195897480580611f95fbb1b05e3af","time":1585723377000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"typescript: 类型定义文件"},{"hash":"895f964871573170c5c68f5733de3787918b5e3d","time":1585571351000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"数据结构: 整理"},{"hash":"db8044554b16a1745884bfd9998fadb86199b704","time":1585556794000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"数据结构: 梳理"},{"hash":"e48f20c1429de7795e4958c1130fecadc186f2de","time":1579244858000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"graphql apollo ecma，html5新特性测试"},{"hash":"dfa57429b7a71d6c4affa40c44f971dba7ea6a64","time":1566402573000,"email":"aiyoudqrjmz@163.com","author":"j哥哥","message":"添加 weex项目"}]},"filePathRelative":"books/javascript/javascript语言精髓与编程语言实践/3.javascript的非函数式语言特性/3.1概述.md"}');export{h as comp,p as data};
