import{_ as e,c as i,b as l,o as c}from"./app-B56A7WC8.js";const s={};function h(o,a){return c(),i("div",null,a[0]||(a[0]=[l('<ul><li>许多语句/语法 <code>分隔符</code> 同时也是 <code>运算符</code> ; 例如: <code>()</code></li></ul><h2 id="单词形式的运算符" tabindex="-1"><a class="header-anchor" href="#单词形式的运算符"><span>单词形式的运算符</span></a></h2><ul><li><p>typeof</p></li><li><p>void</p></li><li><p>new</p></li><li><p>in</p></li><li><p>instanceof</p></li><li><p>delete</p></li><li><p><em>不要将以上运算符，误解为语句</em></p></li></ul><h2 id="表达式" tabindex="-1"><a class="header-anchor" href="#表达式"><span>表达式</span></a></h2><ul><li><p>由 <code>运算符</code> 和 <code>运算元</code> 构成;</p><ul><li>运算元除了包括<code>变量</code> , 还包括<code>函数或方法的返回值</code>, 以及<code>直接量</code>;</li><li>js中可以存在<code>没有运算符</code>的表达式,这个称为<code>单值表达式</code>, 值是本身;</li></ul></li><li><p>js的表达式总有值；</p></li><li><p>既有值得含义, 也有逻辑得含义;</p><ul><li>因为运算符存在优先级别，为了让这种运算次序可控，就有了强制优先级的运算符，所以有了，默认次序，优先级次序，强制优先级，表达式就有了算法的逻辑含义；</li></ul></li><li><p>运算符的优先级别；</p></li><li><p>js表达式根据，使用不同的运算符，产生不同的类型的值；</p></li></ul><h3 id="一般表达式运算" tabindex="-1"><a class="header-anchor" href="#一般表达式运算"><span>一般表达式运算</span></a></h3><h3 id="逻辑运算" tabindex="-1"><a class="header-anchor" href="#逻辑运算"><span>逻辑运算</span></a></h3><ul><li><p>通过表达式消灭分支语句;</p></li><li><p>使用更复杂得表达式来消减if语句;</p></li></ul><h3 id="字符串运算" tabindex="-1"><a class="header-anchor" href="#字符串运算"><span>字符串运算</span></a></h3><ul><li>有且只有一种&#39;字符串运算&#39;, 字符串连接, 总是返回 <code>新字符</code> ;</li></ul><h3 id="比较运算" tabindex="-1"><a class="header-anchor" href="#比较运算"><span>比较运算</span></a></h3><h3 id="赋值运算" tabindex="-1"><a class="header-anchor" href="#赋值运算"><span>赋值运算</span></a></h3><ul><li>有两种赋值表达式 <ul><li>v = e</li><li>v += e</li></ul></li></ul><h3 id="函数调用" tabindex="-1"><a class="header-anchor" href="#函数调用"><span>函数调用</span></a></h3><h3 id="特殊作用的运算符" tabindex="-1"><a class="header-anchor" href="#特殊作用的运算符"><span>特殊作用的运算符</span></a></h3><h3 id="运算符优先级" tabindex="-1"><a class="header-anchor" href="#运算符优先级"><span>运算符优先级</span></a></h3>',16)]))}const m=e(s,[["render",h]]),d=JSON.parse('{"path":"/books/javascript/javascript%E8%AF%AD%E8%A8%80%E7%B2%BE%E9%AB%93%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AE%9E%E8%B7%B5/2javascript%E7%9A%84%E8%AF%AD%E6%B3%95/2.3%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BF%90%E7%AE%97.html","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1735558340000,"contributors":[{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":4,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":4,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"","email":"mingzhuang.ji@ly.com","commits":2}],"changelog":[{"hash":"dbc456edbfbe7a16e99ef11ad04098fbad26fdc4","time":1735558340000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"chore: 调整结构"},{"hash":"6cd6513af962d39a4becb6d4423104c209684122","time":1702001688000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: monorepo"},{"hash":"f2337734b6270ac051b908354dd6dccce75439f6","time":1660138466000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"chore: 梳理"},{"hash":"40490e61600ecc7dded37e1f242086aa74489f64","time":1653880183000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: lerna"},{"hash":"a91ae3f357e5517c1fe59bdcaee35dcb7f620199","time":1627635031000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"feat: books目录"},{"hash":"1dde0babb74363f0c17a499d62b693c8b4123c68","time":1617954954000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"博客：整理博客"},{"hash":"cf48db9cca43f70ff1fe8b559344e85cc1ac9f9c","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"d50f479780aaaab8ba65a89c9940f78b4170b0ba","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"743593259b8d3228406736b8574456e349406155","time":1597232123000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"javascript"},{"hash":"c01bd2bcc502766f19653692fb01cfeb1eb4d946","time":1596113157000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"js: book"}]},"filePathRelative":"books/javascript/javascript语言精髓与编程语言实践/2javascript的语法/2.3表达式运算.md"}');export{m as comp,d as data};
