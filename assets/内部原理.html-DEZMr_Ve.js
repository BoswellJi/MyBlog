import{_ as a,c as i,b as l,o as n}from"./app-B56A7WC8.js";const s={};function c(o,e){return n(),i("div",null,e[0]||(e[0]=[l(`<h2 id="主要部分" tabindex="-1"><a class="header-anchor" href="#主要部分"><span>主要部分</span></a></h2><ul><li><p>每个文件都是一个模块</p></li><li><p>互相引用，会形成一个ModuleGraph，数据结构</p></li><li><p>模块会被合并成chunk, chunk被合并成chunk组</p></li></ul><h2 id="chunk类型" tabindex="-1"><a class="header-anchor" href="#chunk类型"><span>chunk类型</span></a></h2><ul><li><p>initial：入口main chunk,</p></li><li><p>non-initial: 可以延迟加载的块</p><ul><li>可以在动态导入的时候，使用 <code>魔术注释</code> ，指定chunk名称；</li><li><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">  import(</span>
<span class="line">  /* webpackChunkName: &quot;app&quot; */</span>
<span class="line">  &#39;./app.jsx&#39;</span>
<span class="line">  ).then(App =&gt; ReactDOM.render(&lt;App /&gt;, root));</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>结构：<code>[[&#39;chunkIds&#39;],[{ module1Name: function(){}} ]]</code></p></li></ul><h2 id="webpack加载模块" tabindex="-1"><a class="header-anchor" href="#webpack加载模块"><span>webpack加载模块</span></a></h2><ul><li><code>const module = __webpack_require__(moduleId)</code>：加载模块 <ul><li><code>__webpack_modules__[moduleId](module, module.exports, __webpack_require__)</code>: 执行模块</li></ul></li><li>module: 创建的新模块 <ul><li>格式：<code>{ exports:{} }</code></li></ul></li></ul><h2 id="output" tabindex="-1"><a class="header-anchor" href="#output"><span>output</span></a></h2><ul><li><p>输出文件的名称会受配置中的两个字段的影响：</p><ul><li>output.filename - 用于 initial chunk 文件</li><li>output.chunkFilename - 用于 non-initial chunk 文件</li></ul></li></ul>`,8)]))}const m=a(s,[["render",c]]),u=JSON.parse('{"path":"/webpack/%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86.html","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1718759308000,"contributors":[{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":1,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"aiyoudqrjmz@163.com","commits":4,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"","email":"mingzhuang.ji@ly.com","commits":2}],"changelog":[{"hash":"70b4f691e1c73f139c2f924714d83421203012ba","time":1718759308000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"chore(blog): 重命名"},{"hash":"6cd6513af962d39a4becb6d4423104c209684122","time":1702001688000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: monorepo"},{"hash":"f2337734b6270ac051b908354dd6dccce75439f6","time":1660138466000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"chore: 梳理"},{"hash":"40490e61600ecc7dded37e1f242086aa74489f64","time":1653880183000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: lerna"},{"hash":"b50adfb17b982abe1c9bfc864db84ef93f6376ef","time":1648821701000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"chore: 博客优化"},{"hash":"24294b984e33aad5af327b34564656492980a1b3","time":1648732886000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: 整理博客"},{"hash":"b2efe931a92a97358c8ad98b57d349ab972c8175","time":1596632864000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"webapck:hh"}]},"filePathRelative":"webpack/内部原理.md"}');export{m as comp,u as data};
