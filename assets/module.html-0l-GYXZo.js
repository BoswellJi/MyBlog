import{_ as a,c as l,b as o,o as i}from"./app-B56A7WC8.js";const c={};function s(d,e){return i(),l("div",null,e[0]||(e[0]=[o('<blockquote><p>在模块打包器中，每种资源，vue文件，js文件，html文件等都是模块，根据不同文件类型加载器进行处理，打包成js模块</p></blockquote><ul><li><code>*</code>.vue文件，.js文件，在进行<code>import M from &#39;.vue/.js文件名&#39; </code>时，名字相同的导致模块查找失败；这样就会导致打包失败；</li></ul><blockquote><p>对于不同模块的处理：</p></blockquote><ul><li><p><code>commonjs</code>:</p><ul><li><code>module.exports = function</code>: <code>_commonjs2__WEBPACK_IMPORTED_MODULE_4___default()(2, 1)</code></li><li><code>exports.fn = function</code>: <code>(0,_commonjs1__WEBPACK_IMPORTED_MODULE_3__.reduce)(2, 1)</code></li></ul></li><li><p><code>esm</code>:</p><ul><li><code>export function</code>: <code>(0,_esm__WEBPACK_IMPORTED_MODULE_5__.esmAdd)(&#39;ss&#39;)</code></li><li><code>export default function</code>: <code>(0,_esm__WEBPACK_IMPORTED_MODULE_5__.default)(2, 3)</code></li></ul></li></ul><h1 id="什么是模块" tabindex="-1"><a class="header-anchor" href="#什么是模块"><span>什么是模块</span></a></h1><ul><li><p>模块化编程中，开发者将程序分解为<code>功能离散的chunk</code>，并称之为<code>模块</code>;</p></li><li><p>每个模块都拥有小于完整程序的体积，验证，测试，调试变得轻松；</p></li><li><p>可靠的抽象和封装界限，模块，具备了条理清晰的设计和明确的目的；</p></li></ul><h2 id="何为webpack模块" tabindex="-1"><a class="header-anchor" href="#何为webpack模块"><span>何为webpack模块</span></a></h2><ul><li><p>任何加载能够被加载进来的资源，都可以是webpack的模块</p></li><li><p>es2015 import</p></li><li><p>commonjs require()</p></li><li><p>ADM define require</p></li><li><p>css/less/sass 文件的 @import</p></li><li><p>stylesheet 属性 url()， html 属性 src</p></li></ul><h2 id="支持的模块类型" tabindex="-1"><a class="header-anchor" href="#支持的模块类型"><span>支持的模块类型</span></a></h2><ul><li>通过loader可以使得webpack支持多种语言和预处理器</li></ul><h2 id="模块加载流程" tabindex="-1"><a class="header-anchor" href="#模块加载流程"><span>模块加载流程</span></a></h2><ul><li>todo...</li></ul><h1 id="模块热替换" tabindex="-1"><a class="header-anchor" href="#模块热替换"><span>模块热替换</span></a></h1><ul><li>在应用程序运行过程中，替换，添加，删除模块；</li></ul><h2 id="在应用程序中" tabindex="-1"><a class="header-anchor" href="#在应用程序中"><span>在应用程序中</span></a></h2><ul><li>todo...</li></ul><h2 id="在compiler中" tabindex="-1"><a class="header-anchor" href="#在compiler中"><span>在compiler中</span></a></h2><ul><li>todo...</li></ul><h2 id="在模块中" tabindex="-1"><a class="header-anchor" href="#在模块中"><span>在模块中</span></a></h2><ul><li>todo...</li></ul><h2 id="在runtime中" tabindex="-1"><a class="header-anchor" href="#在runtime中"><span>在runtime中</span></a></h2><ul><li>todo...</li></ul>',22)]))}const m=a(c,[["render",s]]),t=JSON.parse('{"path":"/webpack/module.html","title":"什么是模块","lang":"en-US","frontmatter":{},"git":{"updatedTime":1718759308000,"contributors":[{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":5,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"","email":"mingzhuang.ji@ly.com","commits":2}],"changelog":[{"hash":"70b4f691e1c73f139c2f924714d83421203012ba","time":1718759308000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"chore(blog): 重命名"},{"hash":"6cd6513af962d39a4becb6d4423104c209684122","time":1702001688000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: monorepo"},{"hash":"f2337734b6270ac051b908354dd6dccce75439f6","time":1660138466000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"chore: 梳理"},{"hash":"40490e61600ecc7dded37e1f242086aa74489f64","time":1653880183000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: lerna"},{"hash":"b50adfb17b982abe1c9bfc864db84ef93f6376ef","time":1648821701000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"chore: 博客优化"},{"hash":"24294b984e33aad5af327b34564656492980a1b3","time":1648732886000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: 整理博客"},{"hash":"fea64fce3cd3380d156f1487f7b33798d7ae372a","time":1614844665000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"个人博客搬迁"}]},"filePathRelative":"webpack/module.md"}');export{m as comp,t as data};
