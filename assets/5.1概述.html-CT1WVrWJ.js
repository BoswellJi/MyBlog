import{_ as e,c as i,b as l,o as s}from"./app-B56A7WC8.js";const h={};function m(c,a){return s(),i("div",null,a[0]||(a[0]=[l('<h2 id="编程语言" tabindex="-1"><a class="header-anchor" href="#编程语言"><span>编程语言</span></a></h2><ul><li>动态和静态结合的主流是融合各个领域的特点，经典的，面向对象的，函数型的，动态的，我们从所有这些吸收可取之处，比起以前，生硬地嵌入（另一种语言的东西）将越来越不可取了；</li><li>从计算机系统无关的角度来看，包含，语法，语义，语用三个方面的；</li><li>命令式，说明式，函数式是从，数据结构和算法两个本质方面来进行分类的；</li><li>如果在语言陈述时无法确定，而必定在计算机执行时才能确定这三者之间的关系；</li></ul><h3 id="哪些因素导致三者的关系不能静态确定呢" tabindex="-1"><a class="header-anchor" href="#哪些因素导致三者的关系不能静态确定呢"><span>哪些因素导致三者的关系不能静态确定呢?</span></a></h3><ul><li>例如 &#39;a+b&#39; 要有确定的含义, 至少要有两方面的限定因素: <ol><li>a,b,+这三个标识符的指称确定;</li><li>语句所在上下文环境确定;</li></ol></li></ul><h3 id="动态数据类型" tabindex="-1"><a class="header-anchor" href="#动态数据类型"><span>动态数据类型</span></a></h3><ul><li>动态类型声明</li><li>动态空间分配</li></ul><h3 id="动态执行系统" tabindex="-1"><a class="header-anchor" href="#动态执行系统"><span>动态执行系统</span></a></h3><ul><li>编译系统</li><li>解释系统</li><li>编码</li></ul><h3 id="编程代码-文本" tabindex="-1"><a class="header-anchor" href="#编程代码-文本"><span>编程代码/文本</span></a></h3><ul><li>语法规则</li></ul><h3 id="编程范式" tabindex="-1"><a class="header-anchor" href="#编程范式"><span>编程范式</span></a></h3><ul><li>代码组织模式 <ul><li>过程/命令式</li><li>说明式</li><li>函数式</li><li>面向对象</li></ul></li></ul><h3 id="编程思想" tabindex="-1"><a class="header-anchor" href="#编程思想"><span>编程思想</span></a></h3><ul><li>实际问题编程化</li></ul><h3 id="编程能力" tabindex="-1"><a class="header-anchor" href="#编程能力"><span>编程能力</span></a></h3><ul><li>解决实际问题的方法</li></ul><h3 id="js引擎" tabindex="-1"><a class="header-anchor" href="#js引擎"><span>js引擎</span></a></h3><ul><li><p>JScript</p></li><li><p>KJS</p></li><li><p>DMonkey</p></li><li><p>JavaScriptCore</p></li><li><p>动态语言与脚本语言不同</p></li></ul>',18)]))}const o=e(h,[["render",m]]),t=JSON.parse('{"path":"/books/javascript/javascript%E8%AF%AD%E8%A8%80%E7%B2%BE%E9%AB%93%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AE%9E%E8%B7%B5/5javascript%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80%E7%89%B9%E6%80%A7/5.1%E6%A6%82%E8%BF%B0.html","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1735558340000,"contributors":[{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":4,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":4,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"","email":"mingzhuang.ji@ly.com","commits":2}],"changelog":[{"hash":"dbc456edbfbe7a16e99ef11ad04098fbad26fdc4","time":1735558340000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"chore: 调整结构"},{"hash":"6cd6513af962d39a4becb6d4423104c209684122","time":1702001688000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: monorepo"},{"hash":"f2337734b6270ac051b908354dd6dccce75439f6","time":1660138466000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"chore: 梳理"},{"hash":"40490e61600ecc7dded37e1f242086aa74489f64","time":1653880183000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: lerna"},{"hash":"a91ae3f357e5517c1fe59bdcaee35dcb7f620199","time":1627635031000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"feat: books目录"},{"hash":"1dde0babb74363f0c17a499d62b693c8b4123c68","time":1617954954000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"博客：整理博客"},{"hash":"cf48db9cca43f70ff1fe8b559344e85cc1ac9f9c","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"d50f479780aaaab8ba65a89c9940f78b4170b0ba","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"c01bd2bcc502766f19653692fb01cfeb1eb4d946","time":1596113157000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"js: book"},{"hash":"42dc7bd3dee2b0ced6653d10971cfab481330b49","time":1596027142000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"js:动态特性"}]},"filePathRelative":"books/javascript/javascript语言精髓与编程语言实践/5javascript动态语言特性/5.1概述.md"}');export{o as comp,t as data};
