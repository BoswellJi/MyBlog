import{_ as e,c as i,b as l,o as m}from"./app-B56A7WC8.js";const o={};function c(s,a){return m(),i("div",null,a[0]||(a[0]=[l('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><ul><li>Map</li><li>散列使用的数据结构叫做 <code>散列表</code> ；可以快速的插入和取用；</li><li>所有的元素根据该元素对象的 <code>键</code> ，该 <code>键</code> 和字典中的键是类似概念；</li><li>键是用来生成一个 <code>散列数组索引</code> ；</li></ul><h2 id="散列表-哈希表" tabindex="-1"><a class="header-anchor" href="#散列表-哈希表"><span>散列表(哈希表)</span></a></h2><ul><li><p>是指key为哈希值的字典数据结构，不需要手动指定key;</p></li><li><p>组件:</p></li></ul><ol><li>散列生成器</li></ol><ul><li>防止散列重复： - 开链法：实现散列表的底层数组中，每个数组元素又是一个新的数据结构，比如另一个数组，这样就能存储多个键了； - 线性探测法：<code>开放寻址散列</code></li></ul><ol start="2"><li>新增散列</li><li>散列表</li><li>散列函数的选择依赖于键的数据类型</li><li>避免碰撞，首先要确保散列表中用来存储数据的数组其大小是个质数，这和计算散列表值时使用的取余运算有关；</li><li>使用霍纳算法</li></ol><ul><li>优势:</li></ul><ol><li>增删获取快</li></ol><ul><li>劣势:</li></ul><ol><li>遍历慢</li></ol>',11)]))}const h=e(o,[["render",c]]),n=JSON.parse('{"path":"/books/javascript/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95javascript%E6%8F%8F%E8%BF%B0/8%E6%95%A3%E5%88%97/","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1735558340000,"contributors":[{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":4,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":4,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"","email":"mingzhuang.ji@ly.com","commits":2}],"changelog":[{"hash":"dbc456edbfbe7a16e99ef11ad04098fbad26fdc4","time":1735558340000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"chore: 调整结构"},{"hash":"6cd6513af962d39a4becb6d4423104c209684122","time":1702001688000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: monorepo"},{"hash":"f2337734b6270ac051b908354dd6dccce75439f6","time":1660138466000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"chore: 梳理"},{"hash":"40490e61600ecc7dded37e1f242086aa74489f64","time":1653880183000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: lerna"},{"hash":"a91ae3f357e5517c1fe59bdcaee35dcb7f620199","time":1627635031000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"feat: books目录"},{"hash":"1dde0babb74363f0c17a499d62b693c8b4123c68","time":1617954954000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"博客：整理博客"},{"hash":"cf48db9cca43f70ff1fe8b559344e85cc1ac9f9c","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"d50f479780aaaab8ba65a89c9940f78b4170b0ba","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"91b408ee2954e72b166888968e911e137365215a","time":1598614621000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"算法："},{"hash":"01531dfa363a1ccb410189bb9a830e7cb1f76428","time":1598614621000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"算法："}]},"filePathRelative":"books/javascript/数据结构与算法javascript描述/8散列/readme.md"}');export{h as comp,n as data};
