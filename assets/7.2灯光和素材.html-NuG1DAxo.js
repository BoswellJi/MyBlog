import{_ as s,c as a,b as p,o as t}from"./app-B56A7WC8.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>在这章中，我们转向webgl中的灯光和素材的问题。我们将继续使用在4.1章节和4.2章节中涉及到的基础的opengl模型。但是现在我们的责任是在自己的glsl着色器程序中实现灯光等式。这意味着更要了解实现细节。这还意味着，我们可以选择我们实现给指定应用程序的灯光等式的哪个部分。</p><p>灯光等式的目标是计算表面上点的颜色。等式的输入包含材质表面的属性和插图表面的光源的属性。灯光打在表面的角度扮演着一个重要角色。角度能够被从光源的方向和表面的法向量中计算。镜面反射还使用视点方面和反射光线的方向来计算。在计算中被使用的四个向量，被展示在4.1.4章节的光流程中。</p><p><img src="http://math.hws.edu/graphicsbook/c7/light-equation.png" alt=""></p><p><code>矢量L(入射光线), N(法线), R(反射光线), V(视线)</code> 应该是单元矢量，回想一下，单元矢量有这样的性质，两个单元矢量之间夹角的余弦值由两个矢量的点积给出的。 就是计算视线所看到的光的颜色，以及物体对象的材质，颜色与光的混合。</p><p>灯光等式还涉及环境色和发射色，不依赖在流程图中展示的方向矢量。</p><p>当我们通过一些使用灯光模型的各个层次的案例来工作时，你应该记住这章大图。</p><h2 id="最小的光照" tabindex="-1"><a class="header-anchor" href="#最小的光照"><span>最小的光照</span></a></h2><h2 id="镜面反射和冯氏着色" tabindex="-1"><a class="header-anchor" href="#镜面反射和冯氏着色"><span>镜面反射和冯氏着色</span></a></h2><p>为了给我们基础光照模型添加镜面光照，我们需要与光照流程图中的矢量R, v一起工作。在完整的镜面反射中，只要R等于V, 观察者就能看到镜面高亮，这是非常不可能的。但是在我们使用的光照公式中，大量的镜面反射取决于R. V的点积，它代表R和V之间的夹角的余弦值。镜面反射给可见颜色贡献的公式是：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">(R·V)s * specularMaterialColor * lightIntensity</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中s是镜面指数（opengl中被称为shininess的材质特性）。只有R. V比0大的时候，公式才会有效。否则镜面贡献是0。</p><p>单位矢量R能从L和N中计算。（一些三角学展示2*(N·L)*N − L来指定R）。glsl有内置的reflect(I, N)函数，它通过单位矢量N来计算矢量I的反射。但是reflect(L, N)的值是-R而不是R。（glsl, 假设光方向矢量是光指向表面，而我的L向量做相反的）。</p><p>单位向量V从表面指向观察者的位置。记住，我们在眼睛坐标系中进行计算。对于正射投影，观察者基本上处在无线距离，以及V可以取(0, 0, 1), 对于透视投影来说，观察者在眼睛坐标系的点（0，0，1）上，以及v由normalize(-eyeCoords)给出，其中的eyeCoords包含眼睛坐标系中表面的xyz坐标点。把这个所有都放到一起，并且，假设我们已经有了N和L, 计算颜色的glsl代码采用这个格式：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token constant">R</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token function">reflect</span><span class="token punctuation">(</span><span class="token constant">L</span><span class="token punctuation">,</span> <span class="token constant">N</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token constant">V</span> <span class="token operator">=</span> <span class="token function">normalize</span><span class="token punctuation">(</span><span class="token operator">-</span>eyeCoords<span class="token punctuation">.</span>xyz<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// (Assumes a perspective projection.)</span></span>
<span class="line">vec3 color <span class="token operator">=</span> <span class="token function">dot</span><span class="token punctuation">(</span><span class="token constant">L</span><span class="token punctuation">,</span> <span class="token constant">N</span><span class="token punctuation">)</span> <span class="token operator">*</span> diffuseMaterialColor<span class="token punctuation">.</span>rgb <span class="token operator">*</span> diffuseLightColor<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">dot</span><span class="token punctuation">(</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    color <span class="token operator">=</span> color <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token function">dot</span><span class="token punctuation">(</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token punctuation">)</span><span class="token punctuation">,</span> specularExponent<span class="token punctuation">)</span> <span class="token operator">*</span></span>
<span class="line">        specularMaterialColor <span class="token operator">*</span> specularLightColor<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>简单程序实现带有漫反射和镜面反射的光照。对于这个程序，它绘制了曲面，法向量作为一个顶点attribute给出，而不是uniform变量。给光照添加了一些灵活性，灯光的位置被指定为uniform变量，而不是一个常量。准许opengl的约定，lightPosition是一个vec4。对于一个方向光来说，w坐标是0，以及灯光的眼睛坐标系是lightPosition.xyz。如果w坐标不是0，光是一个点光源，并且它的眼睛坐标系是lightPosition.xyz/lightPosition.w。（由lightPosition.w来分割是齐次坐标系的约定，但是在实践中，lightPosition.w通常不是1，就是0）程序允许不同的漫反射和镜面材质颜色，但是光总是白色，漫反强度为0.8，镜面强度为0.4。你应该能够理解顶点着色器中所有的代码：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">attribute vec3 a_coords<span class="token punctuation">;</span></span>
<span class="line">attribute vec3 a_normal<span class="token punctuation">;</span></span>
<span class="line">uniform mat4 modelview<span class="token punctuation">;</span></span>
<span class="line">uniform mat4 projection<span class="token punctuation">;</span></span>
<span class="line">uniform mat3 normalMatrix<span class="token punctuation">;</span></span>
<span class="line">uniform vec4 lightPosition<span class="token punctuation">;</span></span>
<span class="line">uniform vec4 diffuseColor<span class="token punctuation">;</span></span>
<span class="line">uniform vec3 specularColor<span class="token punctuation">;</span></span>
<span class="line">uniform float specularExponent<span class="token punctuation">;</span></span>
<span class="line">varying vec4 v_color<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    vec4 coords <span class="token operator">=</span> <span class="token function">vec4</span><span class="token punctuation">(</span>a_coords<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    vec4 eyeCoords <span class="token operator">=</span> modelview <span class="token operator">*</span> coords<span class="token punctuation">;</span></span>
<span class="line">    gl_Position <span class="token operator">=</span> projection <span class="token operator">*</span> eyeCoords<span class="token punctuation">;</span></span>
<span class="line">    vec3 <span class="token constant">N</span><span class="token punctuation">,</span> <span class="token constant">L</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token punctuation">;</span> <span class="token comment">// Vectors for lighting equation.</span></span>
<span class="line">    <span class="token constant">N</span> <span class="token operator">=</span> <span class="token function">normalize</span><span class="token punctuation">(</span>normalMatrix <span class="token operator">*</span> a_normal<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>lightPosition<span class="token punctuation">.</span>w <span class="token operator">==</span> <span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Directional light.</span></span>
<span class="line">        <span class="token constant">L</span> <span class="token operator">=</span> <span class="token function">normalize</span><span class="token punctuation">(</span>lightPosition<span class="token punctuation">.</span>xyz<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// Point light.</span></span>
<span class="line">        <span class="token constant">L</span> <span class="token operator">=</span> <span class="token function">normalize</span><span class="token punctuation">(</span>lightPosition<span class="token punctuation">.</span>xyz <span class="token operator">/</span> lightPosition<span class="token punctuation">.</span>w <span class="token operator">-</span> eyeCoords<span class="token punctuation">.</span>xyz<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token constant">R</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token function">reflect</span><span class="token punctuation">(</span><span class="token constant">L</span><span class="token punctuation">,</span> <span class="token constant">N</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token constant">V</span> <span class="token operator">=</span> <span class="token function">normalize</span><span class="token punctuation">(</span><span class="token operator">-</span>eyeCoords<span class="token punctuation">.</span>xyz<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// (Assumes a perspective projection.)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">dot</span><span class="token punctuation">(</span><span class="token constant">L</span><span class="token punctuation">,</span> <span class="token constant">N</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        v_color <span class="token operator">=</span> <span class="token function">vec4</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// The vertex is not illuminated.</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        vec3 color <span class="token operator">=</span> <span class="token number">0.8</span> <span class="token operator">*</span> <span class="token function">dot</span><span class="token punctuation">(</span><span class="token constant">L</span><span class="token punctuation">,</span> <span class="token constant">N</span><span class="token punctuation">)</span> <span class="token operator">*</span> diffuseColor<span class="token punctuation">.</span>rgb<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">dot</span><span class="token punctuation">(</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            color <span class="token operator">+=</span> <span class="token number">0.4</span> <span class="token operator">*</span> <span class="token function">pow</span><span class="token punctuation">(</span><span class="token function">dot</span><span class="token punctuation">(</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token punctuation">)</span><span class="token punctuation">,</span> specularExponent<span class="token punctuation">)</span> <span class="token operator">*</span> specularColor<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        v_color <span class="token operator">=</span> <span class="token function">vec4</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span> diffuseColor<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>片元着色器只要给v_color和gl_FragColor赋值。</p><p>这个方法模仿opengl1.1, 在opengl1.1中，是在顶点着色器中进行光照计算。有时候也叫做 <code>逐顶点光照</code> 。他与three.js中的 <code>Lambert shading </code> 相似，除了 <code>Lambert shading </code> 只使用漫反射之外。不是许多案例中，其中得逐个顶点光照不能给出好结果。我们看到在5.1.4子章节中，他能给出非常不好得点光源结果。它还取向生成不好的镜面光照，除非元件非常小。</p><p>如果光源靠近元件，对比元件的大小，光线在顶点上与元件所形成的角度与元件内部上的光线的角度几乎没有关系。</p><p>因为灯光重度依赖角度，这种案例中逐顶点光照不会有一个好的结果。为了获取更好的效果，我们可以做逐片元光照。换句话说，我们从顶点着色器移动到片元着色器中来做光照计算。</p><p>为了做逐片元的光照，包含顶点着色器中可获得的数据，一定要用varying变量传递到片元着色器。这个包括，例如，表面点的对象坐标系或者是眼睛坐标系。同样可以应用例如像漫射颜色的属性，如果它们是属性变量而不是统一变量。当然，uniform变量被片元着色器直接访问。光属性一般是uniform，以及素材属性可能也是uniform。</p><p>之后，当然，有法向量，它是光的基础。尽管法向量有时是uniforms变量，它们通常是用attributes。逐片元光照一般使用内插的法向量, 用varying变量传递到片元着色器中。（冯氏着色就是使用内插法线的光照）。一般来说，内插的法向量只是几何正确法线的近似。但是它已经足够满足得出好结果了。另一个问题是，即使顶点着色器中的法线是单位向量，内插的法线不一定是单位向量。所以片元着色器中归一化内插法线很重要。顶点着色器中原始的法向量也应该被归一化，为了使得插值能够正常工作。</p><p>案例程序使用逐片元光照，我要求你读那个程序中的着色器源码。除了已经被移动到片元着色器中中的光照计算的试试之外，他和之前的简单案例完全一样。</p><p>这个案例让你同时查看，使用逐顶点光照绘制的对象和使用逐片元光照绘制的同一个对象。它是使用相同的着色器程序作为两个简单程序。查看案例中的帮助文案了解更多信息。</p><h2 id="添加复杂度" tabindex="-1"><a class="header-anchor" href="#添加复杂度"><span>添加复杂度</span></a></h2><h2 id="双边光照" tabindex="-1"><a class="header-anchor" href="#双边光照"><span>双边光照</span></a></h2><h2 id="移动中的灯" tabindex="-1"><a class="header-anchor" href="#移动中的灯"><span>移动中的灯</span></a></h2><h2 id="聚光灯" tabindex="-1"><a class="header-anchor" href="#聚光灯"><span>聚光灯</span></a></h2><h2 id="光衰减" tabindex="-1"><a class="header-anchor" href="#光衰减"><span>光衰减</span></a></h2><p>有一个更普遍的灯光属性要去考虑：衰减。这指的是光源的照明量应该会随着距离灯光的距离的增加而减小的事实。衰弱只应用到点光源，因为平行光在无线距离都是有效的。根据物理来说，正确的行为是照明与距离的平方成正比。但是那在计算机图形学中不会有一个好的结果。事实上，目前对于我的所有光源，都没偶随着距离衰减。</p>`,31)]))}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/books/%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E6%A6%82%E8%AE%BA/7.webgl%E7%9A%843d%E5%9B%BE%E5%BD%A2/7.2%E7%81%AF%E5%85%89%E5%92%8C%E7%B4%A0%E6%9D%90.html","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1735558340000,"contributors":[{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":4,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":4,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"","email":"mingzhuang.ji@ly.com","commits":2}],"changelog":[{"hash":"dbc456edbfbe7a16e99ef11ad04098fbad26fdc4","time":1735558340000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"chore: 调整结构"},{"hash":"6cd6513af962d39a4becb6d4423104c209684122","time":1702001688000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: monorepo"},{"hash":"f2337734b6270ac051b908354dd6dccce75439f6","time":1660138466000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"chore: 梳理"},{"hash":"40490e61600ecc7dded37e1f242086aa74489f64","time":1653880183000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: lerna"},{"hash":"a91ae3f357e5517c1fe59bdcaee35dcb7f620199","time":1627635031000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"feat: books目录"},{"hash":"1dde0babb74363f0c17a499d62b693c8b4123c68","time":1617954954000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"博客：整理博客"},{"hash":"12f05e68ede41a091ae2920a07fee0e77e6a62a2","time":1605268233000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"English:关系词"},{"hash":"796e8b16a12add31a31a9302cd5c651f739e0f73","time":1605268233000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"English:关系词"},{"hash":"06e093fd38e8f430cf8fb8376fe7e834bc48c0d2","time":1605182509000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"English:关系词"},{"hash":"a71a5038d869492c61cddd66590524253e88cfcb","time":1605182509000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"English:关系词"}]},"filePathRelative":"books/图形学/计算机图形概论/7.webgl的3d图形/7.2灯光和素材.md"}');export{i as comp,u as data};
