import{_ as a,c as s,b as n,o as c}from"./app-B56A7WC8.js";const t={};function i(r,e){return c(),s("div",null,e[0]||(e[0]=[n(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>THREE.js是一个用于3d图形的面向对象javascript库。它是一个Ricardo Cabello创建，以及来自其他程序员的贡献的开源项目。它似乎已经称为了3dweb应用程序的最流行的开源javascript库。Three.js使用你已经熟悉的概念，比如几何对象，变化，灯光，素材，纹理和照相机。但是它还有构建在强大，灵活的webgl之上的额外特性。</p><p>你能够下载three.js以及阅读文档，在主要的web站点https://threejs.org。下载是相当大的，因为它包含了许多案例和支持文件。在这本书中，我使用软件来自2017年10月的89版。（这本书的1.1版本使用的是71版。从那个发布之后，有大量的api修改。不幸的是，api还没有像我希望的那个稳定，这本书中的例子在89版下会工作，但是可能不会在其他three.js版本中工作）</p><p>three.js的核心特性被定义在一个单个的巨大，被命名为three.js的javascript文件中。能够在下在的build目录下被找到。还有一个更小的最小化版本。three.min.js, 包含相同的格式，其格式不是人类可读的。（你还能找到这些文件的拷贝，从three.js的89版，作为这本书的web站下载的一部分，在内部的源文件中的threejs文件）。在一个web页面上使用three.js，你需要在页面上包含两个script元素之一。例如，将设three.min.js和web页面在相同的文件夹。</p><p>核心之外，three.js下载包含许多案例以及各种在案例中使用的支持文件，即使我重点在核心上，我也会使用几个额外的，并会注意它们的来源当我做的时候。</p><h2 id="场景-渲染器-照相机" tabindex="-1"><a class="header-anchor" href="#场景-渲染器-照相机"><span>场景，渲染器，照相机</span></a></h2><p>Three.js使用HTMLcanvas元素来工作，在章节2.6中，我们在2.6章中用于2d图形同样的事情。在许多web浏览器中，除了自身的2d图形api，一个画布还支持使用webgl画3d, 这与2d api几乎完全不同。webgl在一些支持canvas的浏览器中不能使用。例如，在Ie9和e10中是真实的。但是webgl在ie11中被实现，以及chrome，safari，firefox，和edge最近版本，它还在许多手机设备的浏览器中工作。</p><p>Three.js是一个面向对象的场景图api。基础的程序是构建一个three.js对象之外的场景图。之后，渲染它要呈现的场景图片。动画可以通过修改帧之间的场景图属性来实现。</p><p>three.js库由大量的类组成。最基本的三个是，THREE. Scene, THREE. Camera，THREE. WebRenderer。一个three.js程序，至少需要每种类型的一个对象。这些对象通常存在全局变量中。 <code>var scene, renderer, camera;</code> 注意，几乎所有我们将使用到的three.js的类和常量是被命名为THREE对象的属性，并且它们的名称开头使用THREE。我有时查阅到没有使用前缀的类，并且它通常在three.js文档中没有被使用，但是，前缀一定要包含在真实的项目代码中。</p><p>一个Scene是所有组成一个3D世界对象的持有者。包括灯光，图形对象，可能还有照相机。它表现为场景图的根节点。一个Camera是一个呈现被组成的3d世界的图片的一个视口的特殊类型对象。它代表视图变换和投影的组合。一个WebGLRendere是一个能从一个场景图创建一张图片的对象。</p><p>场景是三个对象中最简单的。一个场景能够被是使用一个没有参数的构造函数THREE. Scene类型的对象来创建.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>scene.add(item)函数通常被用来添加照相机，灯光，和图形对象到场景中。它可能是你唯一需要调用的scene函数, scene.remove(item)函数会从场景中移除一个项目，也偶尔有用。</p><p>有两种类型的相机，一种是正射投影，一种是透视投影。它们用 <code>THREE.Camera</code> 的子类， <code>THREE.OrthographicCamera</code> 和 <code>THREE.PerspectiveCamera</code> 类来表示。使用Opengl中熟悉的参数来指定投影。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">var</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>OrthographicCamera</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> near<span class="token punctuation">,</span> far<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">var</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span>fieldOfViewAngle<span class="token punctuation">,</span> aspect<span class="token punctuation">,</span> near<span class="token punctuation">,</span> far<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>正射照相机参数指定可视空间的<code>x, y, z</code>限制，在眼睛坐标系中，就是说，在一个坐标系系统中，照相机在<code>（0, 0, 0）</code>位置看向z轴的负轴方向, 和视图中指向上的y轴。<code>near</code>和<code>far</code>参数根据到照相机的距离给出<code>z</code>限制。对于正射投影，<code>near</code>可以是负的，放置<code>near</code>的裁剪面在照相机的后面。除了指定上和下裁剪面的参数顺序颠倒之外，与openglglOrtho()函数是相同的。</p><p>透视投影更为普遍。透视投影参数来自opengl的GLU库中的gluPerspective()函数。第一个参数决定了可视空间的垂直范围，指定角度为测量单位。aspect是水平和垂直之间的比例。通常将画布的高度除以宽度。near和far指定可视空间的z轴的限制，作为与照相机的距离。对于一个投影矩阵，near和far必须是正数。创建一个透视相机的典型代码是： <code>camera = new THREE.PerspectiveCamera( 45, canvas.width/canvas.height, 1, 100 );</code> , canvas保存着将被渲染的在图像中的画布的引用。near和far的指意味着，在图像中只包含照相机前面1到100个单位之间的内容。记住，使用不必要的大值赋给far或者不必要的小值赋给near能干扰depth test的准确性。</p><p>一个照相机，像其他对象，也能够添加到场景中，它不能成为被使用的场景图的一部分。</p><h2 id="three-object3d" tabindex="-1"><a class="header-anchor" href="#three-object3d"><span>THREE. Object3D</span></a></h2><p>一个three.js场景图由THREE. Object3D类型的对象组成。包括属于那个类子类的对象。照相机，灯光，和可见对象都是由Object3D的子类来表示。事实上，THREE. Scene本身也是Object3D的子类。</p><h2 id="object-geometry-material" tabindex="-1"><a class="header-anchor" href="#object-geometry-material"><span>Object, Geometry, Material</span></a></h2><h2 id="lights" tabindex="-1"><a class="header-anchor" href="#lights"><span>Lights</span></a></h2><h2 id="一个制造模型的案例" tabindex="-1"><a class="header-anchor" href="#一个制造模型的案例"><span>一个制造模型的案例</span></a></h2>`,23)]))}const p=a(t,[["render",i]]),m=JSON.parse('{"path":"/books/%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E6%A6%82%E8%AE%BA/5three.js3d%E5%9C%BA%E6%99%AF%E5%9B%BEapi/threejs%E5%9F%BA%E7%A1%80.html","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1737296912000,"contributors":[{"name":"jmz","username":"jmz","email":"mingzhuang.ji@ly.com","commits":8,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":5,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"","email":"mingzhuang.ji@ly.com","commits":2}],"changelog":[{"hash":"8b8efcb4954b57112bf3effcde49354f5085d85a","time":1737296912000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"fix(blog): 架构模式和3d"},{"hash":"dbc456edbfbe7a16e99ef11ad04098fbad26fdc4","time":1735558340000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"chore: 调整结构"},{"hash":"6cd6513af962d39a4becb6d4423104c209684122","time":1702001688000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: monorepo"},{"hash":"f2337734b6270ac051b908354dd6dccce75439f6","time":1660138466000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"chore: 梳理"},{"hash":"40490e61600ecc7dded37e1f242086aa74489f64","time":1653880183000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: lerna"},{"hash":"a91ae3f357e5517c1fe59bdcaee35dcb7f620199","time":1627635031000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"feat: books目录"},{"hash":"1dde0babb74363f0c17a499d62b693c8b4123c68","time":1617954954000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"博客：整理博客"},{"hash":"cf48db9cca43f70ff1fe8b559344e85cc1ac9f9c","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"d50f479780aaaab8ba65a89c9940f78b4170b0ba","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"4e43c79bae2a3c5d62a78e858ba0de00fefc10f3","time":1603849819000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"javascript:异常处理"},{"hash":"3328d5d8e446c4d1c24d9e72659b0ab5b61c7c11","time":1603849819000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"javascript:异常处理"},{"hash":"a259312c9230e728ecf49c3dc2487862e9f4a991","time":1603714922000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"javascript:变量"},{"hash":"6c2769914b24f2fdbf2b6f273db6d04a8659d37b","time":1603714922000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"javascript:变量"},{"hash":"60f5047548458d5b569c8194949e2dacf4e75c7c","time":1603456108000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"javascript:翻译"},{"hash":"878f8837375ffe6fbe584bcdac106010a6593c12","time":1603456108000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"javascript:翻译"}]},"filePathRelative":"books/图形学/计算机图形概论/5three.js3d场景图api/threejs基础.md"}');export{p as comp,m as data};
