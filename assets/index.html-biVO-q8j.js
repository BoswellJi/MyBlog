import{_ as n,c as a,b as p,o as e}from"./app-B56A7WC8.js";const t={};function l(c,s){return e(),a("div",null,s[0]||(s[0]=[p(`<h1 id="flutter-布局" tabindex="-1"><a class="header-anchor" href="#flutter-布局"><span>Flutter 布局</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><ol><li>JS简单，但是害怕UI开发，毫无逻辑可循。</li><li>前端天然的就是后端的可视化调试工具。</li><li>误会了，你们只是再改模板而已。</li><li>UI是门艺术。</li><li>小小全栈。</li></ol><h2 id="flutter-布局是什么" tabindex="-1"><a class="header-anchor" href="#flutter-布局是什么"><span>Flutter 布局是什么</span></a></h2><p>UI 元素如何在屏幕上排列和显示的规则。</p><h2 id="flutter-布局有哪些" tabindex="-1"><a class="header-anchor" href="#flutter-布局有哪些"><span>Flutter 布局有哪些</span></a></h2><ul><li>流式布局</li><li>层叠布局</li><li>弹性布局</li><li>网格布局</li></ul><h2 id="流式布局" tabindex="-1"><a class="header-anchor" href="#流式布局"><span>流式布局</span></a></h2><p>元素会沿着一个水平方向依次排列，当前行方向的空间不足以容纳下一个元素时，自动换行到下一行，继续排列，类似文本在文档中 “流式排列、自动换行” 的行为。</p><h3 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景"><span>适用场景</span></a></h3><ul><li>多标签/按钮排列：如页面顶部的分类标签（“推荐”“热点”“科技”）、表单底部的操作按钮（“取消”“下一步”“提交”），需适配不同屏幕宽度。</li><li>商品/卡片列表：如电商 App 的商品列表、资讯 App 的文章卡片，在手机（单排 1-2 个）、平板（单排 3-4 个）上自动调整行数和列数。</li></ul><h3 id="flutter-实现" tabindex="-1"><a class="header-anchor" href="#flutter-实现"><span>Flutter 实现</span></a></h3><ul><li>Wrap</li></ul><p>定义： 在水平或垂直方向上显示其子项的小部件。</p><p>用法：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart"><pre><code class="language-dart"><span class="line"><span class="token keyword">const</span> <span class="token class-name">Wrap</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">Axis</span> direction <span class="token operator">=</span> <span class="token class-name">Axis</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">WrapAlignment</span> alignment <span class="token operator">=</span> <span class="token class-name">WrapAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span></span>
<span class="line">  double spacing <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">WrapAlignment</span> runAlignment <span class="token operator">=</span> <span class="token class-name">WrapAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span></span>
<span class="line">  double runSpacing <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">WrapCrossAlignment</span> crossAxisAlignment <span class="token operator">=</span> <span class="token class-name">WrapCrossAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">TextDirection</span><span class="token operator">?</span> textDirection<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">VerticalDirection</span> verticalDirection <span class="token operator">=</span> <span class="token class-name">VerticalDirection</span><span class="token punctuation">.</span>down<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">Clip</span> clipBehavior <span class="token operator">=</span> <span class="token class-name">Clip</span><span class="token punctuation">.</span>none<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart"><pre><code class="language-dart"><span class="line"><span class="token class-name">Wrap</span><span class="token punctuation">(</span></span>
<span class="line">  spacing<span class="token punctuation">:</span> <span class="token number">8.0</span><span class="token punctuation">,</span></span>
<span class="line">  runSpacing<span class="token punctuation">:</span> <span class="token number">4.0</span><span class="token punctuation">,</span></span>
<span class="line">  children<span class="token punctuation">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token class-name">Chip</span><span class="token punctuation">(</span></span>
<span class="line">      avatar<span class="token punctuation">:</span> <span class="token class-name">CircleAvatar</span><span class="token punctuation">(</span>backgroundColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">.</span>shade900<span class="token punctuation">,</span> child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;AH&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      label<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Hamilton&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">Chip</span><span class="token punctuation">(</span></span>
<span class="line">      avatar<span class="token punctuation">:</span> <span class="token class-name">CircleAvatar</span><span class="token punctuation">(</span>backgroundColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">.</span>shade900<span class="token punctuation">,</span> child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;ML&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      label<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Lafayette&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">Chip</span><span class="token punctuation">(</span></span>
<span class="line">      avatar<span class="token punctuation">:</span> <span class="token class-name">CircleAvatar</span><span class="token punctuation">(</span>backgroundColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">.</span>shade900<span class="token punctuation">,</span> child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;HM&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      label<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Mulligan&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">Chip</span><span class="token punctuation">(</span></span>
<span class="line">      avatar<span class="token punctuation">:</span> <span class="token class-name">CircleAvatar</span><span class="token punctuation">(</span>backgroundColor<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">.</span>shade900<span class="token punctuation">,</span> child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;JL&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      label<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Laurens&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><h2 id="层叠布局" tabindex="-1"><a class="header-anchor" href="#层叠布局"><span>层叠布局</span></a></h2><p>元素会在一个特定的区域内进行重叠排列，后面的元素会覆盖前面的元素，类似于图层的概念。通过堆叠 Widget 实现 “元素覆盖” 效果的布局方式</p><h3 id="适用场景-1" tabindex="-1"><a class="header-anchor" href="#适用场景-1"><span>适用场景</span></a></h3><ul><li>徽章效果</li><li>全屏覆盖</li><li>对话框弹框</li></ul><h3 id="flutter-实现-1" tabindex="-1"><a class="header-anchor" href="#flutter-实现-1"><span>Flutter 实现</span></a></h3><ul><li>Stack</li></ul><p>定义： Stack 是层叠布局的 “容器”，负责管理所有子 Widget 的堆叠规则，自身不具备定位能力。</p><ul><li>Positioned</li></ul><p>定义： Positioned 必须作为 Stack 的直接子 Widget，用于精确控制子 Widget 在 Stack 中的位置，通过距离 Stack 边缘的偏移量定位。</p><p>用法：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart"><pre><code class="language-dart"><span class="line"><span class="token keyword">const</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">AlignmentGeometry</span> alignment <span class="token operator">=</span> <span class="token class-name">AlignmentDirectional</span><span class="token punctuation">.</span>topStart<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">TextDirection</span><span class="token operator">?</span> textDirection<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">StackFit</span> fit <span class="token operator">=</span> <span class="token class-name">StackFit</span><span class="token punctuation">.</span>loose<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">Clip</span> clipBehavior <span class="token operator">=</span> <span class="token class-name">Clip</span><span class="token punctuation">.</span>hardEdge<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart"><pre><code class="language-dart"><span class="line"><span class="token keyword">const</span> <span class="token class-name">Positioned</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span></span>
<span class="line">  double<span class="token operator">?</span> left<span class="token punctuation">,</span></span>
<span class="line">  double<span class="token operator">?</span> top<span class="token punctuation">,</span></span>
<span class="line">  double<span class="token operator">?</span> right<span class="token punctuation">,</span></span>
<span class="line">  double<span class="token operator">?</span> bottom<span class="token punctuation">,</span></span>
<span class="line">  double<span class="token operator">?</span> width<span class="token punctuation">,</span></span>
<span class="line">  double<span class="token operator">?</span> height<span class="token punctuation">,</span></span>
<span class="line">  required <span class="token class-name">Widget</span> child<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><h2 id="弹性布局" tabindex="-1"><a class="header-anchor" href="#弹性布局"><span>弹性布局</span></a></h2><p>让子 Widget 能根据父容器的剩余空间灵活收缩或扩展，从而适配不同尺寸的屏幕或容器，实现响应式布局</p><h3 id="适用场景-2" tabindex="-1"><a class="header-anchor" href="#适用场景-2"><span>适用场景</span></a></h3><ul><li>水平垂直填充整个父级空间的布局</li></ul><h3 id="flutter-实现-2" tabindex="-1"><a class="header-anchor" href="#flutter-实现-2"><span>Flutter 实现</span></a></h3><ul><li>Row</li></ul><p>定义： 弹性布局的容器，以水平方向显示其子项的小部件。</p><ul><li>Column</li></ul><p>定义： 弹性布局的容器，以垂直方向显示其子项的小部件。</p><ul><li>Expanded</li></ul><p>定义： Expanded 必须作为 Row、Column 的直接子 Widget，用于占据父容器的剩余空间。</p><p>用法：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart"><pre><code class="language-dart"><span class="line"><span class="token keyword">const</span> <span class="token class-name">Row</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">MainAxisAlignment</span> mainAxisAlignment <span class="token operator">=</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">MainAxisSize</span> mainAxisSize <span class="token operator">=</span> <span class="token class-name">MainAxisSize</span><span class="token punctuation">.</span>max<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">CrossAxisAlignment</span> crossAxisAlignment <span class="token operator">=</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">TextDirection</span><span class="token operator">?</span> textDirection<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">VerticalDirection</span> verticalDirection <span class="token operator">=</span> <span class="token class-name">VerticalDirection</span><span class="token punctuation">.</span>down<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">TextBaseline</span><span class="token operator">?</span> textBaseline<span class="token punctuation">,</span></span>
<span class="line">  double spacing <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart"><pre><code class="language-dart"><span class="line"><span class="token keyword">const</span> <span class="token class-name">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">MainAxisAlignment</span> mainAxisAlignment <span class="token operator">=</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">MainAxisSize</span> mainAxisSize <span class="token operator">=</span> <span class="token class-name">MainAxisSize</span><span class="token punctuation">.</span>max<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">CrossAxisAlignment</span> crossAxisAlignment <span class="token operator">=</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">TextDirection</span><span class="token operator">?</span> textDirection<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">VerticalDirection</span> verticalDirection <span class="token operator">=</span> <span class="token class-name">VerticalDirection</span><span class="token punctuation">.</span>down<span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">TextBaseline</span><span class="token operator">?</span> textBaseline<span class="token punctuation">,</span></span>
<span class="line">  double spacing <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart"><pre><code class="language-dart"><span class="line"><span class="token keyword">const</span> <span class="token class-name">Expanded</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span></span>
<span class="line">  int flex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">  required <span class="token class-name">Widget</span> child<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><h2 id="网格布局" tabindex="-1"><a class="header-anchor" href="#网格布局"><span>网格布局</span></a></h2><p>用于实现多行多列的二维网格结构，适合像图片墙、商品列表、图标矩阵等场景。它能自动管理子 Widget 的排列、换行和尺寸，支持灵活配置列数、间距和滚动行为。</p><h3 id="适用场景-3" tabindex="-1"><a class="header-anchor" href="#适用场景-3"><span>适用场景</span></a></h3><ul><li>二维布局</li></ul><h3 id="flutter-实现-3" tabindex="-1"><a class="header-anchor" href="#flutter-实现-3"><span>Flutter 实现</span></a></h3><ul><li>GridView</li></ul><p>定义： GridView 是一个可滚动的网格列表，支持横向和纵向的滚动，适合展示大量相同类型的子 Widget。</p><p>用法：</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart"><pre><code class="language-dart"><span class="line"><span class="token class-name">GridView</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span></span>
<span class="line">  crossAxisCount<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">  childAspectRatio<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">  padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  children<span class="token punctuation">:</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name">Card</span><span class="token punctuation">(</span></span>
<span class="line">      child<span class="token punctuation">:</span> <span class="token class-name">Center</span><span class="token punctuation">(</span></span>
<span class="line">        child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Item </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">index</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>没有银弹，选择合适的。</p>`,59)]))}const o=n(t,[["render",l]]),u=JSON.parse('{"path":"/flutter/Flutter%E5%B8%83%E5%B1%80%E5%88%86%E4%BA%AB/","title":"Flutter 布局","lang":"en-US","frontmatter":{},"git":{"updatedTime":1757662997000,"contributors":[{"name":"mingzhuang.ji","username":"","email":"mingzhuang.ji@ly.com","commits":4}],"changelog":[{"hash":"2c6cf84d74c706e5c1bcfc6c6cad128d17f43fe7","time":1757662997000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: Flutter ui 分享"},{"hash":"9c71bd291b498f7039b091a6958c9f5118e9b12d","time":1757506198000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: flutter ui 布局"},{"hash":"e878cf5b8d075099607ed02bdad8463da80fb0d9","time":1757421015000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: flutter ui 布局"},{"hash":"c64809cc4c105865facc141690d91c2d219ff7c3","time":1757409961000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: flutter ui 布局"}]},"filePathRelative":"flutter/Flutter布局分享/readme.md"}');export{o as comp,u as data};
