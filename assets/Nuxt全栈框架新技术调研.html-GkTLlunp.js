import{_ as n,c as a,b as e,o as l}from"./app-B56A7WC8.js";const i="/MyBlog/assets/image-2-CoZ316k-.png",p="/MyBlog/assets/image-3-xy13Pcys.png",t="/MyBlog/assets/image-5-B6NfaIs1.png",c="/MyBlog/assets/image-6-CyZESrai.png",o="/MyBlog/assets/image-8-BclS0dTS.png",r="/MyBlog/assets/image-7-D4wJ_NP1.png",u={};function d(v,s){return l(),a("div",null,s[0]||(s[0]=[e('<div class="text-center"><h1 id="nuxt-全栈框架新技术调研" tabindex="-1"><a class="header-anchor" href="#nuxt-全栈框架新技术调研"><span>Nuxt 全栈框架新技术调研</span></a></h1></div><h2 id="什么是-nuxt" tabindex="-1"><a class="header-anchor" href="#什么是-nuxt"><span>什么是 Nuxt</span></a></h2><p>Nuxt 是一个基于 <span>Vue.js 组件化</span> 的、<span>多渲染模式</span>的、<span>约定优于配置原则</span>的全栈开发框架。就像一个功能强大的 <code>HTML字符串</code> 渲染引擎。</p><h2 id="vue-js-组件化" tabindex="-1"><a class="header-anchor" href="#vue-js-组件化"><span>Vue.js 组件化</span></a></h2><div>组件允许我们将 UI 拆分为独立且可重用的部分，并单独考虑每个部分。应用程序通常被组织成嵌套组件树：</div><p><img src="'+i+'" alt="alt text"></p><h2 id="多渲染模式" tabindex="-1"><a class="header-anchor" href="#多渲染模式"><span>多渲染模式</span></a></h2><ul><li><p>服务端渲染（SSR）</p></li><li><p>静态站点生成（SSG）</p></li><li><p>混合渲染（Nuxt 3 新增）</p></li><li><p>客户端渲染（CSR）</p></li><li><p><del>流式渲染（Streaming SSR） </del></p></li></ul><h2 id="约定优于配置原则" tabindex="-1"><a class="header-anchor" href="#约定优于配置原则"><span>约定优于配置原则</span></a></h2><div><p><em>“约定优于配置” 是一种软件设计原则，强调通过预定义的约定来简化配置过程。Nuxt.js 采用这种理念，通过约定的目录结构和文件命名，减少了开发者需要手动配置的内容。</em></p></div><p>例如，页面组件放在 <code>pages</code> 目录下，路由会自动生成，无需手动配置路由文件。这种方式不仅提高了开发效率，还降低了出错的可能性 。</p><div class="flex flex-col justify-center items-center h-full"><p><img src="'+p+`" alt="alt text"></p></div><h2 id="nuxt-目录结构" tabindex="-1"><a class="header-anchor" href="#nuxt-目录结构"><span>Nuxt 目录结构</span></a></h2><div class="h-[100%] overflow-scroll"><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">your-nuxt-project/          # 项目根目录</span>
<span class="line">├── .nuxt/                  # Nuxt 开发时自动生成的临时文件（构建缓存、编译产物，无需手动修改）</span>
<span class="line">├── .output/                # 生产构建输出目录（SSR/混合渲染模式，包含服务端代码和客户端静态资源）</span>
<span class="line">├── assets/                 # 客户端静态资源（需编译/处理）</span>
<span class="line">│   ├── css/                # 全局 CSS/SCSS 样式（如 main.scss、variables.scss）</span>
<span class="line">│   ├── images/             # 图片资源（如 logo.png，构建时会被优化）</span>
<span class="line">│   └── fonts/              # 字体文件（如 custom-font.ttf）</span>
<span class="line">├── components/             # 公共 Vue 组件（自动导入，无需手动 import）</span>
<span class="line">│   ├── common/             # 通用基础组件（如 Button.vue、Input.vue）</span>
<span class="line">│   ├── layout/             # 布局相关组件（如 Header.vue、Footer.vue）</span>
<span class="line">│   └── [业务模块]/         # 按业务划分的组件（如 product/ProductCard.vue）</span>
<span class="line">├── composables/            # 可复用的组合式函数（自动导入，前后端通用）</span>
<span class="line">│   ├── useUser.ts          # 用户状态相关逻辑（如登录、权限判断）</span>
<span class="line">│   ├── useRequest.ts       # 封装请求逻辑（如二次封装 useFetch）</span>
<span class="line">│   └── useToast.ts         # 全局提示组件逻辑</span>
<span class="line">├── content/                # Nuxt Content 模块目录（用于管理 Markdown/JSON 等内容文件，需安装 @nuxt/content）</span>
<span class="line">│   ├── blog/               # 博客文章（如 2024-01-01-first-post.md）</span>
<span class="line">│   └── docs/               # 文档内容（如 installation.md）</span>
<span class="line">├── layouts/                # 页面布局组件（控制页面整体结构，默认使用 default.vue）</span>
<span class="line">│   ├── default.vue         # 默认布局（包含 &lt;NuxtPage /&gt; 渲染页面内容）</span>
<span class="line">│   ├── auth.vue            # 登录/注册页面布局（无 Header/Footer）</span>
<span class="line">│   └── admin.vue           # 后台管理页面布局（侧边栏+主体）</span>
<span class="line">├── middleware/             # 路由中间件（控制页面跳转权限，分全局/页面/组级别）</span>
<span class="line">│   ├── auth.global.ts      # 全局中间件（所有页面跳转前执行，需加 .global 后缀）</span>
<span class="line">│   └── admin.ts            # 页面级中间件（仅指定页面使用，如 admin 相关页面）</span>
<span class="line">├── node_modules/           # 项目依赖包（npm/yarn/pnpm 安装，无需手动修改）</span>
<span class="line">├── pages/                  # 页面组件目录（文件即路由，自动生成 vue-router 路由表）</span>
<span class="line">│   ├── index.vue           # 首页（对应路由 /）</span>
<span class="line">│   ├── about.vue           # 关于页（对应路由 /about）</span>
<span class="line">│   ├── blog/               # 博客模块页面</span>
<span class="line">│   │   ├── index.vue       # 博客列表页（对应路由 /blog）</span>
<span class="line">│   │   └── [slug].vue      # 博客详情页（动态路由，对应 /blog/xxx）</span>
<span class="line">│   ├── admin/              # 后台管理页面</span>
<span class="line">│   │   ├── index.vue       # 后台首页（/admin）</span>
<span class="line">│   │   └── products/       # 商品管理页面</span>
<span class="line">│   │       ├── index.vue   # 商品列表（/admin/products）</span>
<span class="line">│   │       └── [id].vue    # 商品编辑页（/admin/products/123）</span>
<span class="line">│   └── api/                # 客户端 API 路由（仅 Nuxt 2，Nuxt 3 移至 server/api）</span>
<span class="line">├── public/                 # 静态资源根目录（无需编译，直接复制到输出目录）</span>
<span class="line">│   ├── favicon.ico         # 网站图标</span>
<span class="line">│   ├── robots.txt          # 搜索引擎爬虫规则</span>
<span class="line">│   └── images/             # 无需优化的图片（如二维码、图标）</span>
<span class="line">├── server/                 # Nuxt 3 服务端目录（存放服务端逻辑，仅在服务端运行）</span>
<span class="line">│   ├── api/                # 服务端 API 路由（文件即接口，对应 /api/xxx）</span>
<span class="line">│   │   ├── user.ts         # 用户相关接口（/api/user，支持 GET/POST）</span>
<span class="line">│   │   └── products/       # 商品接口（/api/products）</span>
<span class="line">│   ├── middleware/         # 服务端中间件（所有服务端请求前执行，如权限校验、日志）</span>
<span class="line">│   │   └── auth.ts         # 服务端权限中间件（验证 Token 等）</span>
<span class="line">│   ├── routes/             # 服务端自定义路由（补充 API 路由，支持更复杂的路由规则）</span>
<span class="line">│   └── utils/              # 服务端工具函数（如数据库连接、敏感数据加密）</span>
<span class="line">├── stores/                 # Pinia 状态管理目录（Nuxt 3 官方推荐，替代 Vuex）</span>
<span class="line">│   ├── user.ts             # 用户状态 store（useUserStore）</span>
<span class="line">│   └── cart.ts             # 购物车状态 store（useCartStore）</span>
<span class="line">├── types/                  # TypeScript 类型定义目录（全局类型、接口声明）</span>
<span class="line">│   ├── user.ts             # 用户相关类型（如 User、LoginParams）</span>
<span class="line">│   └── product.ts          # 商品相关类型（如 Product、ProductListRes）</span>
<span class="line">├── utils/                  # 通用工具函数（前后端通用，如格式化时间、数据验证）</span>
<span class="line">│   ├── format.ts           # 格式化工具（如 formatDate、formatPrice）</span>
<span class="line">│   └── validate.ts         # 验证工具（如 validateEmail、validatePhone）</span>
<span class="line">├── .env                    # 环境变量文件（本地开发用，不提交到 Git）</span>
<span class="line">├── .env.production         # 生产环境变量文件（构建时生效）</span>
<span class="line">├── .eslintrc.js            # ESLint 配置文件（代码规范检查）</span>
<span class="line">├── .gitignore              # Git 忽略文件配置（如 node_modules、.nuxt、.env）</span>
<span class="line">├── nuxt.config.ts          # Nuxt 项目核心配置文件（渲染模式、模块、路由等）</span>
<span class="line">├── package.json            # 项目依赖配置（脚本、依赖包版本）</span>
<span class="line">├── pnpm-lock.yaml          # 依赖锁文件（pnpm 专用，确保依赖版本一致）</span>
<span class="line">├── README.md               # 项目说明文档（安装、运行、部署步骤）</span>
<span class="line">└── tsconfig.json           # TypeScript 配置文件（类型检查、编译选项）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="nuxt-核心价值" tabindex="-1"><a class="header-anchor" href="#nuxt-核心价值"><span>Nuxt 核心价值</span></a></h2><ol><li>Nuxt 提供多种渲染模式提高页面渲染性能</li><li>工程化能力增强提高开发体验</li><li>复用 Vue 生态系统</li></ol><h2 id="nuxt-提供多种渲染模式提高页面渲染性能" tabindex="-1"><a class="header-anchor" href="#nuxt-提供多种渲染模式提高页面渲染性能"><span>Nuxt 提供多种渲染模式提高页面渲染性能</span></a></h2><ul><li><p>服务端渲染（SSR）：</p><ul><li>每次请求时，服务端动态生成 HTML 并返回，SEO 友好、首屏加载快。</li></ul></li><li><p>静态站点生成（SSG）：</p><ul><li>构建时预先生成所有页面的静态 HTML，部署后直接返回，极致加载速度。</li></ul></li><li><p>客户端渲染（CSR）：</p><ul><li>兼容传统 SPA 模式，适合纯交互型应用，像后台管理系统。</li></ul></li><li><p>混合渲染（Nuxt 3 新增）：</p><ul><li>同一项目中，部分页面用 SSR（如用户中心），部分用 SSG（如首页），按需选择最优模式。</li></ul></li><li><p><del>流式渲染（Streaming SSR）： </del></p></li></ul><h2 id="服务端渲染-ssr" tabindex="-1"><a class="header-anchor" href="#服务端渲染-ssr"><span>服务端渲染（SSR）</span></a></h2><img src="https://nuxt.com/assets/docs/concepts/rendering/ssr.svg"><h2 id="客户端渲染-csr" tabindex="-1"><a class="header-anchor" href="#客户端渲染-csr"><span>客户端渲染（CSR）</span></a></h2><img src="https://nuxt.com/assets/docs/concepts/rendering/csr.svg"><h2 id="混合渲染-nuxt-3-新增" tabindex="-1"><a class="header-anchor" href="#混合渲染-nuxt-3-新增"><span>混合渲染（Nuxt 3 新增）</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// nuxt.config.ts</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  routeRules<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Homepage pre-rendered at build time</span></span>
<span class="line">    <span class="token string-property property">&#39;/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> prerender<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// Products page generated on demand, revalidates in background, cached until API response changes</span></span>
<span class="line">    <span class="token string-property property">&#39;/products&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> swr<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// Product pages generated on demand, revalidates in background, cached for 1 hour (3600 seconds)</span></span>
<span class="line">    <span class="token string-property property">&#39;/products/**&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> swr<span class="token operator">:</span> <span class="token number">3600</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// Blog posts page generated on demand, revalidates in background, cached on CDN for 1 hour (3600 seconds)</span></span>
<span class="line">    <span class="token string-property property">&#39;/blog&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> isr<span class="token operator">:</span> <span class="token number">3600</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// Blog post page generated on demand once until next deployment, cached on CDN</span></span>
<span class="line">    <span class="token string-property property">&#39;/blog/**&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> isr<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// Admin dashboard renders only on client-side</span></span>
<span class="line">    <span class="token string-property property">&#39;/admin/**&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> ssr<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// Add cors headers on API routes</span></span>
<span class="line">    <span class="token string-property property">&#39;/api/**&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> cors<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// Redirects legacy urls</span></span>
<span class="line">    <span class="token string-property property">&#39;/old-page&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> redirect<span class="token operator">:</span> <span class="token string">&#39;/new-page&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="工程化增强" tabindex="-1"><a class="header-anchor" href="#工程化增强"><span>工程化增强</span></a></h2><ul><li><p>基于文件的路由</p></li><li><p>自动导入：组件（components 目录）、工具函数（composables 目录）无需 import 即可直接使用。</p></li><li><p>TypeScript 友好：默认支持 TS，类型提示完善。</p></li><li><p>代码分割：自动按页面分割 JS 包，减少首次加载体积。</p></li><li><p>CSS 支持：内置 SCSS、PostCSS，支持全局样式（assets/css）和组件样式隔离（scoped）。</p></li><li><p>热重载：开发时修改文件，浏览器，服务器自动刷新，提升开发效率。</p></li></ul><h2 id="基于文件的路由" tabindex="-1"><a class="header-anchor" href="#基于文件的路由"><span>基于文件的路由</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">├── middleware/             # 路由中间件（控制页面跳转权限，分全局/页面/组级别）</span>
<span class="line">│   ├── auth.global.ts      # 全局中间件（所有页面跳转前执行，需加 .global 后缀）</span>
<span class="line">│   └── admin.ts            # 页面级中间件（仅指定页面使用，如 admin 相关页面）</span>
<span class="line">├── node_modules/           # 项目依赖包（npm/yarn/pnpm 安装，无需手动修改）</span>
<span class="line">├── pages/                  # 页面组件目录（文件即路由，自动生成 vue-router 路由表）</span>
<span class="line">│   ├── index.vue           # 首页（对应路由 /）</span>
<span class="line">│   ├── about.vue           # 关于页（对应路由 /about）</span>
<span class="line">│   ├── blog/               # 博客模块页面</span>
<span class="line">│   │   ├── index.vue       # 博客列表页（对应路由 /blog）</span>
<span class="line">│   │   └── [slug].vue      # 博客详情页（动态路由，对应 /blog/xxx）</span>
<span class="line">│   ├── admin/              # 后台管理页面</span>
<span class="line">│   │   ├── index.vue       # 后台首页（/admin）</span>
<span class="line">│   │   └── products/       # 商品管理页面</span>
<span class="line">│   │       ├── index.vue   # 商品列表（/admin/products）</span>
<span class="line">│   │       └── [id].vue    # 商品编辑页（/admin/products/123）</span>
<span class="line">│   └── api/                # 客户端 API 路由（仅 Nuxt 2，Nuxt 3 移至 server/api）</span>
<span class="line">├── public/                 # 静态资源根目录（无需编译，直接复制到输出目录）</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编译产物" tabindex="-1"><a class="header-anchor" href="#编译产物"><span>编译产物</span></a></h2><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;routes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/about&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;component&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/about.vue&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;component&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/index.vue&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/posts/:id&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;component&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pages/posts/[id].vue&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自动导入-框架内部" tabindex="-1"><a class="header-anchor" href="#自动导入-框架内部"><span>自动导入-框架内部</span></a></h2><h3 id="vue" tabindex="-1"><a class="header-anchor" href="#vue"><span>vue:</span></a></h3><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue"><pre><code class="language-vue"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nuxt" tabindex="-1"><a class="header-anchor" href="#nuxt"><span>nuxt:</span></a></h3><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue"><pre><code class="language-vue"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> refresh<span class="token punctuation">,</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">useFetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/hello&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自动导入-项目内部" tabindex="-1"><a class="header-anchor" href="#自动导入-项目内部"><span>自动导入-项目内部</span></a></h2><h3 id="内置自动导入文件夹" tabindex="-1"><a class="header-anchor" href="#内置自动导入文件夹"><span>内置自动导入文件夹</span></a></h3><ol><li>app/components/</li><li>app/composables/</li><li>app/utils/</li></ol><h3 id="自定义自动导入文件夹" tabindex="-1"><a class="header-anchor" href="#自定义自动导入文件夹"><span>自定义自动导入文件夹</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">imports<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Auto-import pinia stores defined in \`~/stores\`</span></span>
<span class="line">  dirs<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;stores&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="typescript-友好" tabindex="-1"><a class="header-anchor" href="#typescript-友好"><span>TypeScript 友好</span></a></h2><h3 id="端到端的类型提示" tabindex="-1"><a class="header-anchor" href="#端到端的类型提示"><span>端到端的类型提示</span></a></h3><p><img src="`+t+'" alt="alt text"></p><h2 id="复用-vue-生态系统" tabindex="-1"><a class="header-anchor" href="#复用-vue-生态系统"><span>复用 Vue 生态系统</span></a></h2><ul><li>Vue 3 支持：Nuxt 3 基于 Vue 3，享受最新特性（组合式 API、Teleport、Suspense）。</li><li>Vue Router 集成：自动生成路由表，支持动态路由、嵌套路由。</li><li>丰富插件生态：支持 Vue 插件（如 Vuex、Vue I18n）。</li><li>兼容 Vue 生态库：大部分 Vue 组件库（如 Vuetify、Element Plus）均可直接使用。</li></ul><img src="'+c+'"><h2 id="强大的devtools-展示项目信息" tabindex="-1"><a class="header-anchor" href="#强大的devtools-展示项目信息"><span>强大的devtools-展示项目信息</span></a></h2><img src="'+o+'"><h2 id="强大的devtools-可视化的路由切换" tabindex="-1"><a class="header-anchor" href="#强大的devtools-可视化的路由切换"><span>强大的devtools-可视化的路由切换</span></a></h2><img src="'+r+'">',50)]))}const b=n(u,[["render",d]]),h=JSON.parse('{"path":"/nuxt/Nuxt%E5%85%A8%E6%A0%88%E6%A1%86%E6%9E%B6/Nuxt%E5%85%A8%E6%A0%88%E6%A1%86%E6%9E%B6%E6%96%B0%E6%8A%80%E6%9C%AF%E8%B0%83%E7%A0%94.html","title":"Nuxt 全栈框架新技术调研","lang":"en-US","frontmatter":{},"git":{"updatedTime":1758199546000,"contributors":[{"name":"mingzhuang.ji","username":"","email":"mingzhuang.ji@ly.com","commits":6},{"name":"Boswell","username":"Boswell","email":"aiyoudqrjmz@163.com","commits":1,"url":"https://github.com/Boswell"}],"changelog":[{"hash":"8d738d3372359ba657eb32a1e9286fa25186963c","time":1758199546000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: nuxt 介绍"},{"hash":"08713a4e69e918505739d3dd6f2188e0a09f6213","time":1757939372000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: nuxt ppt"},{"hash":"085eceee3dc203f1021059af916395f83d48e480","time":1757924745000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: nuxt 介绍文档"},{"hash":"a4176c8cb409b26de912b4bb7c4818c2067cb275","time":1757867077000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: nuxt 分享"},{"hash":"2c6cf84d74c706e5c1bcfc6c6cad128d17f43fe7","time":1757662997000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: Flutter ui 分享"},{"hash":"801743fa89393f33355be4302a5497f5e1184add","time":1756988083000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: nuxt 分享"},{"hash":"db087169c9d99b22dd6a1dca9df92225c382cbab","time":1756902530000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: nuxt 分享"}]},"filePathRelative":"nuxt/Nuxt全栈框架/Nuxt全栈框架新技术调研.md"}');export{b as comp,h as data};
