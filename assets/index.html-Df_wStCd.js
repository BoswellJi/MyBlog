import{_ as e,c as s,b as i,o as l}from"./app-B56A7WC8.js";const n={};function c(t,a){return l(),s("div",null,a[0]||(a[0]=[i(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><ul><li>位是计算机中任何类型的二进制的东西，通常描述为0，1；</li></ul><h2 id="值" tabindex="-1"><a class="header-anchor" href="#值"><span>值</span></a></h2><ul><li>将存储器中的位，分成代表信息片段的块；在js环境中，这些块称为值；</li><li>每个值都有决定其作用的类型，</li></ul><h2 id="数字-64位来存储单个数字值-表示负数时-最高位用来表示符号" tabindex="-1"><a class="header-anchor" href="#数字-64位来存储单个数字值-表示负数时-最高位用来表示符号"><span>数字： 64位来存储单个数字值，表示负数时，最高位用来表示符号；</span></a></h2><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串"><span>字符串</span></a></h2><ul><li>unicode编码标准为每一个字符都分配一个数字；</li><li>js为每个字符串元素使用16位来存储；所以可以存储多达2的16次方个不同的字；</li><li>但是unicode定义的字符是它的两倍多，所以，有些字符，实际占用了<code>两个字符的位置</code>；</li></ul><h2 id="自动类型转换" tabindex="-1"><a class="header-anchor" href="#自动类型转换"><span>自动类型转换</span></a></h2><ul><li>js会尽可能接受几乎所有你给他的程序；</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">8*null = 0;             null =&gt; 0</span>
<span class="line">&quot;five&quot; * 2 = NaN ;      &quot;five&quot; =&gt; NaN</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>真值：除了null,undefined之外的任何值；</li><li>对象类型的值与基本类型的值比较是，会掉调用toString，valueOf</li></ul><h2 id="运算符优先级" tabindex="-1"><a class="header-anchor" href="#运算符优先级"><span>运算符优先级</span></a></h2><ul><li>比较运算符，也叫布尔运算符</li></ul><h2 id="表达式和语句" tabindex="-1"><a class="header-anchor" href="#表达式和语句"><span>表达式和语句</span></a></h2><ul><li><p>我们把生产值的操作的代码片段称为<code>表达式</code>;</p></li><li><p>表达式就像从句，可以嵌套从句，语句就是完整的句子；</p></li><li><p>最简单的一条语句由一个表达式和其后的分号组成；</p></li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">1;</span>
<span class="line">1 :    是表达式</span>
<span class="line">1; :   是语句</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>一个语句，它可以改变后面语句的状态，这个称为副作用；</li></ul><h2 id="绑定" tabindex="-1"><a class="header-anchor" href="#绑定"><span>绑定</span></a></h2><ul><li>产生的新值必须立即使用，否则会再度消失；所以js中提供了称为绑定或变量的东西；</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">let a = 5 * 5; </span>
<span class="line">这是第二种语句</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,20)]))}const m=e(n,[["render",c]]),r=JSON.parse('{"path":"/books/javascript/javascript%E7%BC%96%E7%A8%8B%E7%B2%BE%E7%B2%B9/1%E5%80%BC%E7%B1%BB%E5%9E%8B%E8%BF%90%E7%AE%97%E7%AC%A6/","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1735558340000,"contributors":[{"name":"jmz","username":"jmz","email":"aiyoudqrjmz@163.com","commits":3,"url":"https://github.com/jmz"},{"name":"Boswell","username":"Boswell","email":"mingzhuang.ji@ly.com","commits":4,"url":"https://github.com/Boswell"},{"name":"mingzhuang.ji","username":"","email":"mingzhuang.ji@ly.com","commits":2}],"changelog":[{"hash":"dbc456edbfbe7a16e99ef11ad04098fbad26fdc4","time":1735558340000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"chore: 调整结构"},{"hash":"6cd6513af962d39a4becb6d4423104c209684122","time":1702001688000,"email":"mingzhuang.ji@ly.com","author":"mingzhuang.ji","message":"feat: monorepo"},{"hash":"f2337734b6270ac051b908354dd6dccce75439f6","time":1660138466000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"chore: 梳理"},{"hash":"40490e61600ecc7dded37e1f242086aa74489f64","time":1653880183000,"email":"aiyoudqrjmz@163.com","author":"Boswell","message":"feat: lerna"},{"hash":"a91ae3f357e5517c1fe59bdcaee35dcb7f620199","time":1627635031000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"feat: books目录"},{"hash":"1dde0babb74363f0c17a499d62b693c8b4123c68","time":1617954954000,"email":"mingzhuang.ji@ly.com","author":"Boswell","message":"博客：整理博客"},{"hash":"cf48db9cca43f70ff1fe8b559344e85cc1ac9f9c","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"d50f479780aaaab8ba65a89c9940f78b4170b0ba","time":1604129744000,"email":"mingzhuang.ji@ly.com","author":"jmz","message":"项目结构：调整目录结构"},{"hash":"19e9eb18c66100cfc59e853a51f91f7efd0f5f12","time":1596989722000,"email":"aiyoudqrjmz@163.com","author":"jmz","message":"javascript"}]},"filePathRelative":"books/javascript/javascript编程精粹/1值类型运算符/readme.md"}');export{m as comp,r as data};
